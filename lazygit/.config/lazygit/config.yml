
confirmOnQuit: false
quitOnTopLevelReturn: true   # determines whether hitting 'esc' will quit the application when there is nothing to cancel/close
disableStartupPopups: true
notARepository: 'prompt'     # one of: 'prompt' | 'create' | 'skip' | 'quit'

# display confirmation when subprocess terminates
promptToReturnFromSubprocess: true


gui:
  language: "en"                    # one of (auto, en, zh-CN, zh-TW, pl, nl, ja, ko, ru)
  timeFormat: "02 Jan 2006"         # https://pkg.go.dev/time#Time.Format
  shortTimeFormat: "15:03"
  mouseEvents: true

  border: "single"                  # one of 'single' | 'double' | 'rounded' | 'hidden'
  windowSize: "half"                # one of 'normal' | 'half' | 'full' default is 'normal'
  mainPanelSplitMode: "flexible"    # one of 'horizontal' | 'flexible' | 'vertical'
  sidePanelWidth: 0.3333            # number from 0 to 1
  splitDiff: 'auto'                 # one of 'auto' | 'always'
  commandLogSize: 8

  scrollHeight: 2                   # how many lines you scroll by
  scrollPastBottom: true            # enable scrolling past the bottom
  scrollOffMargin: 2                # how many lines to keep before/after the cursor when it reaches the top/bottom of the view
  scrollOffBehavior: "margin"       # one of 'margin' | 'jump'

  expandFocusedSidePanel: false
  skipDiscardChangeWarning: false
  skipStashWarning: false
  skipRewordInEditorWarning: false  # for skipping the confirmation before launching the reword editor
  animateExplosion: true            # shows an explosion animation when nuking the working tree

  showFileTree: true                # for rendering changes files in a tree format
  showListFooter: true              # for seeing the '5 of 20' message in list panels
  showRandomTip: true
  showBranchCommitHash: false       # show commit hashes alongside branch names
  showBottomLine: true              # for hiding the bottom information line (unless it has important information to tell you)
  showPanelJumps: true              # for showing the jump-to-panel keybindings as panel subtitles
  showCommandLog: false
  showIcons: false                  # deprecated: use nerdFontsVersion instead
  nerdFontsVersion: "3"             # nerd fonts version to use ("2" or "3"); empty means don't show nerd font icons

  commitLength:
    show: true

  theme:
    activeBorderColor:
      - "#ffffff"
      - bold
    inactiveBorderColor:
      - "#B3B1AD"
    searchingActiveBorderColor:
      - "#39BAE6"
      - bold
    optionsTextColor:
      - "#39BAE6"
    selectedLineBgColor:
      - "#00010A"
    selectedRangeBgColor:
      - "#39BAE6"
    cherryPickedCommitBgColor:
      - "#E6B450"
    cherryPickedCommitFgColor:
      - "#00010A"
    unstagedChangesColor:
      - "#D96C75"
    defaultFgColor:
      - "#B3B1AD"


keybinding:
  universal:
    nextScreenMode: '+'
    prevScreenMode: '_'

    quit: 'q'
    quitWithoutChangingDirectory: 'Q'
    quit-alt1: '<c-c>'    # alternative/alias of quit

    return: '<esc>'       # return to previous menu, will quit if there's nowhere to return
    togglePanel: '<tab>'  # goto the next panel

    nextTab: ']'
    prevTab: '['

    prevItem: '<up>'      # go one line up
    prevItem-alt: 'k'     # go one line up
    nextItem: '<down>'    # go one line down
    nextItem-alt: 'j'     # go one line down

    prevPage: ','         # go to next page in list
    nextPage: '.'         # go to previous page in list
    gotoTop:  '<'         # go to top of list
    gotoBottom: '>'       # go to bottom of list

    scrollLeft: 'H'       # scroll left within list view
    scrollRight: 'L'      # scroll right within list view

    prevBlock: '<left>'   # goto the previous block / panel
    prevBlock-alt: 'h'    # goto the previous block / panel
    nextBlock: '<right>'  # goto the next block / panel
    nextBlock-alt: 'l'    # goto the next block / panel

    scrollUpMain: '<pgup>'        # main panel scroll up
    scrollDownMain: '<pgdown>'    # main panel scroll down
    scrollUpMain-alt1: 'K'        # main panel scroll up
    scrollDownMain-alt1: 'J'      # main panel scroll down
    scrollUpMain-alt2: '<c-u>'    # main panel scroll up
    scrollDownMain-alt2: '<c-d>'  # main panel scroll down

    nextMatch: 'n'
    prevMatch: 'N'

    # goto the Nth block / panel
    jumpToBlock: ['1', '2', '3', '4', '5']

    optionMenu: null     # show help menu
    optionMenu-alt1: '?' # show help menu

    openRecentRepos: '<c-r>'
    select: '<enter>'
    goInto: 'i'
    confirm: '<enter>'
    submitEditorText: '<enter>'

    undo: 'z'
    redo: '<c-z>'

    new: 'n'
    edit: 'e'
    remove: 'd'
    openFile: 'o'
    refresh: 'R'

    pushFiles: 'p'
    pullFiles: 'P'

    executeCustomCommand: ':'
    copyToClipboard: '<c-o>'

    filteringMenu: '<c-s>'
    createRebaseOptionsMenu: 'm'
    createPatchOptionsMenu: '<c-p>'
    diffingMenu: 'W'
    diffingMenu-alt: '<c-e>'        # deprecated
    extrasMenu: '@'
    toggleWhitespaceInDiffView: '<c-w>'
    increaseContextInDiffView: '}'
    decreaseContextInDiffView: '{'

  status:
    checkForUpdate: 'u'
    recentRepos: '<enter>'

  files:
    commitChanges: 'c'
    commitChangesWithoutHook: 'w'
    commitChangesWithEditor: 'C'
    amendLastCommit: 'A'

    stashAllChanges: 's'
    viewStashOptions: 'S'

    viewResetOptions: 'D'
    toggleStagedAll: '<space>' # stage/unstage all

    fetch: 'f'
    ignoreFile: 'I'
    openMergeTool: 'M'

    refreshFiles: 'r'
    confirmDiscard: 'x'

    toggleTreeView: '`'
    openStatusFilter: '<c-b>'

  branches:
    fetchRemote: 'f'
    setUpstream: 'u' # set as upstream of checked-out branch

    checkoutBranchByName: 'c'
    forceCheckoutBranch: 'F'

    createPullRequest: 'o'
    viewPullRequestOptions: 'O'

    rebaseBranch: 'r'
    renameBranch: 'R'
    mergeIntoCurrentBranch: 'M'
    fastForward: 'f' # fast-forward this branch from its upstream

    pushTag: 'P'
    createTag: 'T'
    viewGitFlowOptions: null

  commits:
    checkoutCommit: '<space>'

    revertCommit: 't'
    amendToCommit: 'A'
    viewResetOptions: 'g'

    renameCommit: 'r'
    renameCommitWithEditor: 'R'
    tagCommit: 'T'

    squashDown: 's'
    squashAboveCommits: 'S'

    markCommitAsFixup: 'f'
    createFixupCommit: 'F' # create fixup commit for this commit

    moveDownCommit: '<c-j>' # move commit down one
    moveUpCommit: '<c-k>'   # move commit up one

    cherryPickCopy: 'c'
    cherryPickCopyRange: 'C'
    pasteCommits: 'v'
    resetCherryPick: '<c-R>'

    pickCommit: 'p' # pick commit (when mid-rebase)
    viewBisectOptions: 'b'

    openLogMenu: '<c-l>'
    copyCommitMessageToClipboard: '<c-y>'

  stash:
    popStash: 'g'
    renameStash: 'r'

  commitFiles:
    checkoutCommitFile: 'c'

  main:
    toggleDragSelect: 'v'
    toggleDragSelect-alt: 'V'
    toggleSelectHunk: 'a'
    pickBothHunks: 'b'

  submodules:
    init: 'i'
    update: 'u'
    bulkMenu: 'b'


os:
  editPreset: 'nvim'


refresher:
  refreshInterval: 10 # File/submodule refresh interval in seconds. Auto-refresh can be disabled via option 'git.autoRefresh'.
  fetchInterval: 60   # Re-fetch interval in seconds. Auto-fetch can be disabled via option 'git.autoFetch'.


update:
  method: never # can be: prompt | background | never
  days: 14      # how often an update is checked for


git:
  mainBranches: [master, main]
  autoRefresh: true
  autoFetch: false

  # Pass --all flag when running git fetch. Set to false to fetch only
  # origin (or the current branch's upstream remote if there is one)
  fetchAll: true

  commit:
    signOff: false

  paging:
    colorArg: always
    useConfig: false

  merging:
    manualCommit: false   # only applicable to unix users
    args: ''              # extra args passed to `git merge`, e.g. --no-ff

  log:
    # one of date-order, author-date-order, topo-order or default.
    # topo-order makes it easier to read the git log graph, but commits may not
    # appear chronologically. See https://git-scm.com/docs/git-log#_commit_ordering
    order: 'date-order'
    # one of always, never, when-maximised
    # this determines whether the git graph is rendered in the commits panel
    showGraph: 'always'
    # displays the whole git graph by default in the commits panel (equivalent to passing the `--all` argument to `git log`)
    showWholeGraph: false

  parseEmoji: false
  skipHookPrefix: WIP
  overrideGpg: false # prevents lazygit from spawning a separate process when using GPG
  disableForcePushing: false

  branchLogCmd:      'git log --graph --color=always --abbrev-commit --decorate --date=relative --pretty=medium {{branchName}} --'
  allBranchesLogCmd: 'git log --graph --all --color=always --abbrev-commit --decorate --date=relative  --pretty=medium'
